"""empty message

Revision ID: 7d467d5d436f
Revises: 
Create Date: 2025-08-24 22:14:28.804326

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7d467d5d436f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_name', sa.String(length=200), nullable=False),
    sa.Column('course_description', sa.Text(), nullable=True),
    sa.Column('time_stamp', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uid', sa.String(length=64), nullable=False),
    sa.Column('usertype', sa.Enum('admin', 'teacher', 'student'), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('school', sa.String(length=200), nullable=True),
    sa.Column('profession', sa.String(length=200), nullable=True),
    sa.Column('token_version', sa.String(length=100), nullable=True),
    sa.Column('time_stamp', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('group_name', sa.String(length=200), nullable=False),
    sa.Column('group_description', sa.Text(), nullable=True),
    sa.Column('time_stamp', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('problem',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('type', sa.Enum('single', 'multiple', 'fill', 'subjective', 'coding'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('time_stamp', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('test_cases', sa.JSON(), nullable=True),
    sa.Column('limitations', sa.JSON(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_course',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'course_id')
    )
    op.create_table('group_student',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('group_id', 'student_id')
    )
    op.create_table('problemset',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('time_stamp', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('problemset_problem',
    sa.Column('problemset_id', sa.Integer(), nullable=False),
    sa.Column('problem_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
    sa.ForeignKeyConstraint(['problemset_id'], ['problemset.id'], ),
    sa.PrimaryKeyConstraint('problemset_id', 'problem_id')
    )
    op.create_table('submission',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('problem_set_id', sa.Integer(), nullable=True),
    sa.Column('problem_id', sa.Integer(), nullable=False),
    sa.Column('problem_type', sa.Enum('single', 'multiple', 'fill', 'subjective', 'coding'), nullable=True),
    sa.Column('user_answer', sa.JSON(), nullable=True),
    sa.Column('language', sa.Enum('python', 'cpp'), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('Pending', 'Judging', 'AC', 'WA', 'TLE', 'MLE', 'OLE', 'CE', 'RE', 'IE'), nullable=True),
    sa.Column('max_time', sa.Integer(), nullable=True),
    sa.Column('max_memory', sa.Integer(), nullable=True),
    sa.Column('time_stamp', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('extra', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['problem_set_id'], ['problemset.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('submission')
    op.drop_table('problemset_problem')
    op.drop_table('problemset')
    op.drop_table('group_student')
    op.drop_table('user_course')
    op.drop_table('problem')
    op.drop_table('group')
    op.drop_table('user')
    op.drop_table('course')
    # ### end Alembic commands ###
